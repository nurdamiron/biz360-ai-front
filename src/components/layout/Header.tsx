// src/components/layout/Header.tsx
import React from 'react';
import { 
  Box, Flex, Text, Button, Avatar, Menu, 
  MenuButton, MenuList, MenuItem, Icon,
} from '@chakra-ui/react';

import { useColorMode, IconButton, HStack, Select, useDisclosure } from '@chakra-ui/react';


import { useNavigate } from 'react-router-dom';
import { useAppDispatch, useAppSelector } from '../../hooks/redux';
import { logout } from '../../store/slices/authSlice';
import { Environment, getCurrentEnvironment, setEnvironment } from '../../config/api.config';
import WebSocketIndicator from '../common/WebSocketIndicator';

// –ò–∫–æ–Ω–∫–∏ (–¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ react-icons)
// –í —ç—Ç–æ–º —à–∞–±–ª–æ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —É—Å–ª–æ–≤–Ω—ã–µ –∏–º–µ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
const SunIcon = () => <span>‚òÄÔ∏è</span>;
const MoonIcon = () => <span>üåô</span>;
const MenuIcon = () => <span>‚â°</span>;

const Header: React.FC = () => {
  const { colorMode, toggleColorMode } = useColorMode();
  const { user } = useAppSelector(state => state.auth);
  const dispatch = useAppDispatch();
  const navigate = useNavigate();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
  const { isOpen, onOpen, onClose } = useDisclosure();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const [environment, setCurrentEnvironment] = React.useState<Environment>(getCurrentEnvironment());
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
  const handleLogout = () => {
    dispatch(logout());
    navigate('/login');
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const handleEnvironmentChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    const newEnv = e.target.value as Environment;
    setCurrentEnvironment(newEnv);
    setEnvironment(newEnv);
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    window.location.reload();
  };
  
  return (
    <Box 
      as="header" 
      bg={colorMode === 'light' ? 'white' : 'gray.800'} 
      boxShadow="sm" 
      position="fixed"
      top="0"
      width="100%"
      zIndex="1000"
    >
      <Flex 
        alignItems="center" 
        justifyContent="space-between" 
        maxW="1400px" 
        mx="auto" 
        px={4} 
        py={2}
      >
        {/* –õ–æ–≥–æ—Ç–∏–ø –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ */}
        <Flex alignItems="center">
          <Text fontSize="xl" fontWeight="bold" color="primary.500">
            Biz360 CRM
          </Text>
          <Text ml={2} fontSize="sm" color="gray.500">
            –ò–ò-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç
          </Text>
        </Flex>
        
        {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
        <HStack spacing={4} display={{ base: 'none', md: 'flex' }}>
          <WebSocketIndicator />
          
          <Select 
            size="sm" 
            value={environment} 
            onChange={handleEnvironmentChange}
            width="auto"
            bg={colorMode === 'light' ? 'gray.50' : 'gray.700'}
          >
            <option value={Environment.LOCAL}>–õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä</option>
            <option value={Environment.PRODUCTION}>–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä</option>
          </Select>
        </HStack>
        
        {/* –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –º–µ–Ω—é */}
        <HStack spacing={2}>
          <IconButton
            aria-label={`Switch to ${colorMode === 'light' ? 'dark' : 'light'} mode`}
            icon={colorMode === 'light' ? <MoonIcon /> : <SunIcon />}
            onClick={toggleColorMode}
            variant="ghost"
            size="sm"
          />
          
          {user && (
            <Menu>
              <MenuButton 
                as={Button} 
                variant="unstyled" 
                display="flex" 
                alignItems="center"
              >
                <Avatar size="sm" name={user.username} src={user.avatarUrl} />
              </MenuButton>
              <MenuList>
                <MenuItem>–ü—Ä–æ—Ñ–∏–ª—å</MenuItem>
                <MenuItem>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</MenuItem>
                <MenuItem onClick={handleLogout}>–í—ã–π—Ç–∏</MenuItem>
              </MenuList>
            </Menu>
          )}
          
          {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é */}
          <IconButton
            display={{ base: 'flex', md: 'none' }}
            aria-label="Open menu"
            icon={<MenuIcon />}
            onClick={onOpen}
            variant="ghost"
            size="sm"
          />
        </HStack>
      </Flex>
      
      {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏) */}
      {isOpen && (
        <Box
          display={{ base: 'block', md: 'none' }}
          bg={colorMode === 'light' ? 'white' : 'gray.800'}
          p={4}
          shadow="md"
        >
          <WebSocketIndicator />
          
          <Select 
            size="sm" 
            value={environment} 
            onChange={handleEnvironmentChange}
            width="full"
            mt={2}
            bg={colorMode === 'light' ? 'gray.50' : 'gray.700'}
          >
            <option value={Environment.LOCAL}>–õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä</option>
            <option value={Environment.PRODUCTION}>–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä</option>
          </Select>
        </Box>
      )}
    </Box>
  );
};

export default Header;